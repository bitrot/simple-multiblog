{"name":"Simple-MultiBlog","body":"Simple Multiblog\r\n================\r\nSimple Multiblog builds upon the awesome blog, [Simple](https://github.com/orf/simple), and \r\nadds multiple author functionality.  We loved the simplicity in UI/UX but we traded portions of the\r\narchitectural sugar for additional features.  However, we think the code base is still pretty easy to follow.\r\nProps go to [Simple](https://github.com/orf/simple), [Obtvse](https://github.com/NateW/obtvse), \r\nand [Dustin Curtis' Svbtle](http://dcurt.is/codename-svbtle) for an awesome chain of inspiration.\r\n\r\nSimple Multiblog is maintained by [Ryan Macy](https://github.com/rmacy) and [Eric Haughee](https://github.com/ehaughee) \r\nunder the name [bitrot](https://github.com/bitrot).\r\n\r\n####Short list of feature additions\r\n* UI and backend support for multiple authors\r\n* [Gravatar](http://gravatar.com) integration\r\n* [Disqus](http://disqus.com/) integration\r\n* Logout functionality (WIP; Simple and Simple-MB use basic auth making logout dicey but in turn authentication simple)\r\n* Data model for Authors (users) in addition to Posts\r\n\r\n\r\nInstallation\r\n============\r\nFirst clone the repo: ``git clone git://github.com/bitrot/simple-multiblog.git``\r\n\r\nInstall [Gunicorn](http://gunicorn.org) with [PIP](https://crate.io/packages/pip/): ``pip install gunicorn``\r\n\r\nDescend into the simple-multiblog directory: ``cd simple-multiblog``\r\n\r\nInstall dependancies: ``pip install -U -r .requirements``\r\n\r\nCreate the config: ``python create_config.py``\r\n\r\nAnd you're good to go!\r\n\r\n(To add users run ``python add_user.py``)\r\n\r\nDeployment\r\n============\r\n\r\n_Quick Note: The -w flag for gunicorn signifies how many processes (read workers) you want to start. The recommended amount of workers is 2x the number of cores per CPU._\r\n\r\n\r\n####With NGINX\r\n\r\nTo deploy, install & setup [NGINX](http://nginx.org/). See how to configure NGINX with Gunicorn [here](http://gunicorn.org/deploy.html).\r\n\r\nNavigate to your simple-multiblog directory and start some gunicorn processes: ``gunicorn -w 4 -b unix:/tmp/gunicorn.sock simple:app -D``\r\n\r\n\r\n####Without NGINX\r\n\r\nTo deploy without NGINX, navigate to the simple-multiblog directory and start some gunicorn processes: ``gunicorn -w 4 -b 0.0.0.0 simple:app -D``\r\n\r\nCaveat! gunicorn is very susceptible to denial-of-service attacks without a proxy buffer like NGINX.\r\n\r\n\r\n####Flask Development Server\r\n\r\nNaviagate to your simple-multiblog directory and run: ``python simple.py`` to start the development server.\r\n\r\nOpen ``simple.py`` with your favorite editor and change ``app.debug = False`` to ``app.debug = True`` to turn on the development features of Flask.\r\n\r\nThe server will automatically reload when it detects a code change when ``app.debug = True`` is set.\r\n\r\nExample\r\n============\r\nYou can see the blog live @ [bitrot](http://bitrot.io/).\r\n\r\nScreenshots\r\n===========\r\n- - -\r\n![Admin](https://s3.amazonaws.com/bitrot/bitrot_docs_admin.png)\r\n- - -\r\n![Draft](https://s3.amazonaws.com/bitrot/bitrot_docs_edit.png)\r\n- - -\r\n![Live](https://s3.amazonaws.com/bitrot/bitrot_docs_post.png)\r\n- - -\r\n![Author] (https://s3.amazonaws.com/bitrot/bitrot_docs_author_eric.png)\r\n- - -\r\n![Author] (https://s3.amazonaws.com/bitrot/bitrot_docs_author_ryan.png)\r\n- - -\r\n![Authors] (https://s3.amazonaws.com/bitrot/bitrot_docs_multi_user.png)\r\n- - -","tagline":"Simple-MultiBlog extends the functionality of simple, which is a clone of Obtvse written in Python running on Flask.","google":"UA-32144623-1","note":"Don't delete this file! It's used internally to help with page regeneration."}